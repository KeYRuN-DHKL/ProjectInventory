@using ProjectInventory.Entities
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using ProjectInventory.Enum
@model System.Collections.Generic.List<ProjectInventory.Entities.Sale>

@{
    ViewBag.Title = "Sales List";
    Layout = "_Layout";
}

<style>
    .table-container {
        max-height: 400px;
        overflow-y: auto;
        border: 1px solid #ddd;
        border-radius: 6px;
        background-color: #fff;
        box-shadow: 0 1px 5px rgba(0, 0, 0, 0.05);
        margin-top: 20px;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        min-width: 700px;
    }

    th, td {
        padding: 12px 16px;
        border-bottom: 1px solid #e0e0e0;
        text-align: left;
        font-size: 14px;
    }

    th {
        background-color: #f1f3f5;
        position: sticky;
        top: 0;
        z-index: 1;
        font-weight: 600;
    }

    tr:nth-child(even) {
        background-color: #f9f9f9;
    }

    .expand-btn {
        cursor: pointer;
        font-weight: bold;
        font-size: 18px;
        color: #007bff;
    }

    .expand-btn:hover {
        text-decoration: underline;
    }

    .details-row {
        background-color: #f6faff;
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 16px;
    }

    .add-btn {
        background-color: #007bff;
        color: #fff;
        border: none;
        padding: 10px 18px;
        border-radius: 6px;
        cursor: pointer;
        font-size: 14px;
        transition: background 0.3s ease;
    }

    .add-btn:hover {
        background-color: #0056b3;
    }
</style>

<div class="page-header">
    <h2>Sales List</h2>
    <a class="btn add-btn" asp-action="Create">+ Add Sale</a>
</div>

<div class="table-container">
    <table id="openingTable">
        <thead>
        <tr>
            <th></th>
            <th>Date</th>
            <th>Invoice No.</th>
            <th>Customer</th>
            <th>Amount</th>
            <th>Taxable Amount</th>
            <th>Tax Amount</th>
            <th>Total Amount</th>
            <th>Description</th>
            <th>Action</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr data-invoice="@item.Id">
                @if (item.Status == Status.Completed)
                {

                    <td class="expand-btn" onclick="toggleDetails(this, '@item.Id','Sale')">+</td>
                }
                else
                {
                    <td class="expand-btn" onclick="toggleDetails(this, '@item.Id','SaleReturn')">+</td>

                }
                <td>@item.TransactionDate</td>
                <td>@item.InvoiceNo</td>
                <td>@item.StakeHolder.Name</td>
                <td>@item.TotalAmount</td>
                <td>@item.TaxableAmount</td>
                <td>@item.TaxAmount</td>
                <td>@item.GrandTotal</td>
                <td>@item.Description</td>
                @if (item.Status == Status.Returned)
                {
                    <td class="text-danger">Returned</td>
                }
                else
                {

                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Return" asp-route-id="@item.Id">Return</a>
                    </td>
                }
            </tr>
        }
        </tbody>
    </table>
</div>
<div id="popup" style="display:none; position:fixed; top:0; left:0; right:0; bottom:0; background-color:rgba(0,0,0,0.4); z-index:9999; justify-content:center; align-items:center;">
    <div id="popupContent" style=" padding:20px; border-radius:8px; min-width:300px; position:relative;">
        <!-- Content from ConfirmDelete will be injected here -->
    </div>
</div>


<script>
    function toggleDetails(element, Id, Type) {
        const row = element.closest('tr');
        const isExpanded = element.textContent === "-";

        if (isExpanded) {
            const nextRow = row.nextElementSibling;
            if (nextRow && nextRow.classList.contains('details-row')) {
                nextRow.remove();
            }
            element.textContent = "+";
        } else {
            const nextRow = row.nextElementSibling;
            if (nextRow && nextRow.classList.contains('details-row')) {
                nextRow.remove();
            }

            fetch(`/api/Api/${Id}`)
                .then(res => {
                    if (!res.ok) throw new Error("Not found");
                    return res.json();
                })
                .then(data => {
                    let totalAmount = 0;
                    const rowsHtml = data.map(item => {
                        const total = (item.quantity * item.rate)+ (item.quantity * item.rate * item.vatPercentage / 100);
                        totalAmount += total;
                        return `
                        <tr>
                            <td>${item.productName || 'N/A'}</td>
                            <td>${item.unitName || ''}</td>
                            <td>${item.quantity}</td>
                            <td>${item.rate}</td>
                            <td>${item.amount}</td>
                            <td>${item.vatPercentage}</td>
                            <td>${item.amount * item.vatPercentage/100}</td>
                            <td>${item.amount+ (item.amount * item.vatPercentage/100)}</td>
                        </tr>
                    `;
                    }).join('');

                    const detailRow = document.createElement("tr");
                    detailRow.className = "details-row";
                    detailRow.innerHTML = `
                    <td colspan="12">
                        <strong>Sales Items:</strong>
                        <table class="table mt-2 mb-0 ">
                            <thead colspan="12">
                                <tr colspan="12" >
                                    
                                    <th>Product</th>
                                    <th>Unit</th>
                                    <th>Quantity</th>
                                    <th>Rate</th>
                                    <th>Amount</th>
                                    <th>Vat (%)</th>
                                    <th>Vat Amount</th>
                                    <th>Total</th>


                                </tr>
                            </thead>
                            <tbody>
                                ${rowsHtml}
                                <tr  style="font-weight:bold;">
                                    
                                    <td colspan="7" style="text-align:right;">Total Amount</td>
                                    <td colspan="1">${totalAmount.toFixed(2)}</td>
                                </tr>
                            </tbody>
                        </table>
                    </td>
                `;
                    row.parentNode.insertBefore(detailRow, row.nextSibling);
                    element.textContent = "-";
                })
                .catch(err => {
                    alert("Failed to load Sales items.");
                    console.error(err);
                });
        }
    }
    function openDeletePopup(id) {
        fetch(`/Sale/ConfirmDelete/?id=${id}`)
            .then(response => {
                if (!response.ok) throw new Error('Failed to load Delete popup');
                return response.text();
            })
            .then(html => {
                document.getElementById('popupContent').innerHTML = '' + html;
                document.getElementById('popup').style.display = 'flex';
            })
            .catch(err => console.error(err));
    }
    function closePopup() {
        document.getElementById('popup').style.display = 'none';
        document.getElementById('popupContent').innerHTML = '';
    }
</script>